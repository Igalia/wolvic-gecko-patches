commit fc06a4bd8f44ac2cfd95cb1bce8b163c8d660d54
Author: Sergio Villar Senin <svillar@igalia.com>
Date:   Fri Nov 29 17:00:15 2024 +0100

    patch 15

diff --git a/dom/vr/VRServiceTest.cpp b/dom/vr/VRServiceTest.cpp
index 9da9d10..9cb2469 100644
--- a/dom/vr/VRServiceTest.cpp
+++ b/dom/vr/VRServiceTest.cpp
@@ -77,7 +77,7 @@ void VRMockDisplay::Create() {
                           VRDisplayCapabilityFlags::Cap_StageParameters |
                           VRDisplayCapabilityFlags::Cap_MountDetection |
                           VRDisplayCapabilityFlags::Cap_ImmersiveVR;
-  state.blendMode = VRDisplayBlendMode::Opaque;
+  state.blendModes[0] = VRDisplayBlendMode::Opaque;
 
   // 1836 x 2040 resolution is arbitrary and can be overridden.
   // This default resolution was chosen to be within range of a
diff --git a/gfx/vr/external_api/moz_external_vr.h b/gfx/vr/external_api/moz_external_vr.h
index 16aa45d..d56218c 100644
--- a/gfx/vr/external_api/moz_external_vr.h
+++ b/gfx/vr/external_api/moz_external_vr.h
@@ -49,7 +49,7 @@ namespace gfx {
 // running at the same time? Or...what if we have multiple
 // release builds running on same machine? (Bug 1563232)
 #define SHMEM_VERSION "0.0.12"
-static const int32_t kVRExternalVersion = 19;
+static const int32_t kVRExternalVersion = 20;
 
 // We assign VR presentations to groups with a bitmask.
 // Currently, we will only display either content or chrome.
@@ -69,6 +69,7 @@ static const int kVRControllerMaxButtons = 64;
 static const int kVRControllerMaxAxis = 16;
 static const int kVRLayerMaxCount = 8;
 static const int kVRHapticsMaxCount = 32;
+static const int kVRBlendModesMaxLen = 3;
 
 #if defined(__ANDROID__)
 typedef uint64_t VRLayerTextureHandle;
@@ -255,13 +256,16 @@ namespace gfx {
 
 // -
 
-enum class VRDisplayBlendMode : uint8_t { Opaque, Additive, AlphaBlend };
+enum class VRDisplayBlendMode : uint8_t { _empty, Opaque, Additive, AlphaBlend };
+
+enum class ImmersiveXRSessionType : uint8_t { VR, AR };
 
 }  // namespace gfx
 template <>
 inline constexpr bool IsEnumCase<gfx::VRDisplayBlendMode>(
     const gfx::VRDisplayBlendMode raw) {
   switch (raw) {
+    case gfx::VRDisplayBlendMode::_empty:
     case gfx::VRDisplayBlendMode::Opaque:
     case gfx::VRDisplayBlendMode::Additive:
     case gfx::VRDisplayBlendMode::AlphaBlend:
@@ -474,8 +478,8 @@ struct VRDisplayState {
   //                             ('B'<<8) + 'A').
   uint64_t eightCC;
   VRDisplayCapabilityFlags capabilityFlags;
-  VRDisplayBlendMode blendMode;
-  std::array<uint8_t, 5> _padding2;
+  std::array<VRDisplayBlendMode, kVRBlendModesMaxLen> blendModes;
+  std::array<uint8_t, 5 - kVRBlendModesMaxLen + 1> _padding2;
   std::array<VRFieldOfView, VRDisplayState::NumEyes> eyeFOV;
   static_assert(std::is_pod<VRFieldOfView>::value);
   std::array<std::array<float, 16>, VRDisplayState::NumEyes> eyeTransform;
@@ -503,7 +507,7 @@ struct VRDisplayState {
 #ifdef MOZILLA_INTERNAL_API
   auto MutTiedFields() {
     return std::tie(shutdown, _padding1, minRestartInterval, displayName,
-                    eightCC, capabilityFlags, blendMode, _padding2, eyeFOV,
+                    eightCC, capabilityFlags, blendModes, _padding2, eyeFOV,
                     eyeTransform, eyeResolution, nativeFramebufferScaleFactor,
                     suppressFrames, isConnected, isMounted, _padding3,
                     stageSize, sittingToStandingTransform, lastSubmittedFrameId,
@@ -698,6 +702,8 @@ struct VRBrowserState {
   bool navigationTransitionActive;
   VRLayerState layerState[kVRLayerMaxCount];
   VRHapticState hapticState[kVRHapticsMaxCount];
+  VRDisplayBlendMode blendMode;
+  ImmersiveXRSessionType sessionType;
 
 #ifdef MOZILLA_INTERNAL_API
   void Clear() { memset(this, 0, sizeof(VRBrowserState)); }
diff --git a/gfx/vr/service/OSVRSession.cpp b/gfx/vr/service/OSVRSession.cpp
index aeb9606..ba44a83 100644
--- a/gfx/vr/service/OSVRSession.cpp
+++ b/gfx/vr/service/OSVRSession.cpp
@@ -360,7 +360,7 @@ bool OSVRSession::InitState(mozilla::gfx::VRSystemState& aSystemState) {
                                  (int)VRDisplayCapabilityFlags::Cap_Present |
                                  (int)
                                      VRDisplayCapabilityFlags::Cap_ImmersiveVR);
-  state.blendMode = VRDisplayBlendMode::Opaque;
+  state.blendModes[0] = VRDisplayBlendMode::Opaque;
   state.reportsDroppedFrames = false;
 
   // XXX OSVR display topology allows for more than one viewer
diff --git a/gfx/vr/service/OculusSession.cpp b/gfx/vr/service/OculusSession.cpp
index 6485c36..439e0b1 100644
--- a/gfx/vr/service/OculusSession.cpp
+++ b/gfx/vr/service/OculusSession.cpp
@@ -1030,7 +1030,7 @@ bool OculusSession::InitState(VRSystemState& aSystemState) {
   state.capabilityFlags |= VRDisplayCapabilityFlags::Cap_MountDetection;
   state.capabilityFlags |= VRDisplayCapabilityFlags::Cap_Present;
   state.capabilityFlags |= VRDisplayCapabilityFlags::Cap_ImmersiveVR;
-  state.blendMode = VRDisplayBlendMode::Opaque;
+  state.blendModes[0] = VRDisplayBlendMode::Opaque;
   state.reportsDroppedFrames = true;
 
   mFOVPort[VRDisplayState::Eye_Left] = desc.DefaultEyeFov[ovrEye_Left];
diff --git a/gfx/vr/service/OpenVRSession.cpp b/gfx/vr/service/OpenVRSession.cpp
index 9f5d332..c8da38b 100644
--- a/gfx/vr/service/OpenVRSession.cpp
+++ b/gfx/vr/service/OpenVRSession.cpp
@@ -713,7 +713,7 @@ bool OpenVRSession::InitState(VRSystemState& aSystemState) {
                                      Cap_StageParameters |
                                  (int)
                                      VRDisplayCapabilityFlags::Cap_ImmersiveVR);
-  state.blendMode = VRDisplayBlendMode::Opaque;
+  state.blendModes[0] = VRDisplayBlendMode::Opaque;
   state.reportsDroppedFrames = true;
 
   ::vr::ETrackedPropertyError err;
